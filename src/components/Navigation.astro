---
/**
 * Navigation Component
 *
 * Main navigation component with clear separation between user and developer sections.
 * Provides <2 clicks navigation to any section per SC-011 requirement.
 *
 * Features:
 * - Visual distinction between user docs, developer docs, and AI guidelines
 * - Responsive mobile menu
 * - Active state indication
 * - Keyboard navigation support
 */

const currentPath = Astro.url.pathname;

const isActive = (path: string) => currentPath.startsWith(path);

const sections = [
  {
    name: 'User Guide',
    icon: 'üìò',
    path: '/ghostty-config-files/user-guide',
    description: 'Installation, configuration, and usage',
    items: [
      { name: 'Installation', path: '/ghostty-config-files/user-guide/installation' },
      { name: 'Configuration', path: '/ghostty-config-files/user-guide/configuration' },
      { name: 'Usage', path: '/ghostty-config-files/user-guide/usage' },
    ],
  },
  {
    name: 'Developer',
    icon: 'üë®‚Äçüíª',
    path: '/ghostty-config-files/developer',
    description: 'Architecture, contributing, and testing',
    items: [
      { name: 'Architecture', path: '/ghostty-config-files/developer/architecture' },
      { name: 'Contributing', path: '/ghostty-config-files/developer/contributing' },
      { name: 'Testing', path: '/ghostty-config-files/developer/testing' },
    ],
  },
  {
    name: 'AI Guidelines',
    icon: 'ü§ñ',
    path: '/ghostty-config-files/ai-guidelines',
    description: 'Guidelines for AI assistants',
    items: [
      { name: 'Core Principles', path: '/ghostty-config-files/ai-guidelines/core-principles' },
      { name: 'Git Strategy', path: '/ghostty-config-files/ai-guidelines/git-strategy' },
      { name: 'CI/CD Requirements', path: '/ghostty-config-files/ai-guidelines/ci-cd-requirements' },
      { name: 'Development Commands', path: '/ghostty-config-files/ai-guidelines/development-commands' },
    ],
  },
];
---

<nav class="bg-white dark:bg-gray-800 shadow-md">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16">
      <!-- Logo and Home Link -->
      <div class="flex items-center">
        <a href="/ghostty-config-files/" class="flex items-center space-x-2 text-xl font-bold hover:text-blue-600">
          <span>üëª</span>
          <span>Ghostty Config</span>
        </a>
      </div>

      <!-- Main Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {sections.map(section => (
          <div class="relative group">
            <a
              href={section.path}
              class={`
                flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium
                transition-colors
                ${isActive(section.path)
                  ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'
                  : 'hover:bg-gray-100 dark:hover:bg-gray-700'}
              `}
            >
              <span>{section.icon}</span>
              <span>{section.name}</span>
            </a>

            <!-- Dropdown Menu -->
            <div class="absolute left-0 mt-2 w-64 bg-white dark:bg-gray-800 rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-10">
              <div class="p-2">
                <p class="px-3 py-2 text-xs text-gray-500 dark:text-gray-400">
                  {section.description}
                </p>
                <hr class="my-2 border-gray-200 dark:border-gray-700" />
                {section.items.map(item => (
                  <a
                    href={item.path}
                    class={`
                      block px-3 py-2 rounded-md text-sm
                      ${isActive(item.path)
                        ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'
                        : 'hover:bg-gray-100 dark:hover:bg-gray-700'}
                    `}
                  >
                    {item.name}
                  </a>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>

      <!-- Mobile Menu Button -->
      <div class="md:hidden flex items-center">
        <button
          id="mobile-menu-button"
          class="p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700"
          aria-label="Toggle mobile menu"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="hidden md:hidden">
    <div class="px-2 pt-2 pb-3 space-y-1 bg-gray-50 dark:bg-gray-900">
      {sections.map(section => (
        <div class="space-y-1">
          <a
            href={section.path}
            class={`
              flex items-center space-x-2 px-3 py-2 rounded-md text-base font-medium
              ${isActive(section.path)
                ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'
                : 'hover:bg-gray-100 dark:hover:bg-gray-700'}
            `}
          >
            <span>{section.icon}</span>
            <span>{section.name}</span>
          </a>
          {section.items.map(item => (
            <a
              href={item.path}
              class={`
                block pl-11 pr-3 py-2 rounded-md text-sm
                ${isActive(item.path)
                  ? 'bg-blue-50 dark:bg-blue-950 text-blue-600 dark:text-blue-400'
                  : 'hover:bg-gray-100 dark:hover:bg-gray-700'}
              `}
            >
              {item.name}
            </a>
          ))}
        </div>
      ))}
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  const button = document.getElementById('mobile-menu-button');
  const menu = document.getElementById('mobile-menu');

  if (button && menu) {
    button.addEventListener('click', () => {
      menu.classList.toggle('hidden');
    });
  }
</script>

<style>
  /* Ensure smooth transitions */
  nav a {
    transition: all 0.2s ease;
  }

  /* Dropdown positioning */
  .group:hover .group-hover\:opacity-100 {
    opacity: 1;
    visibility: visible;
  }
</style>
