---
export interface Props {
  variant?: 'default' | 'secondary' | 'destructive' | 'outline' | 'success' | 'warning' | 'info';
  size?: 'default' | 'sm' | 'lg';
  class?: string;
  href?: string;
}

const {
  variant = 'default',
  size = 'default',
  class: className = '',
  href,
  ...props
} = Astro.props;

// Badge variant styling with constitutional compliance
const baseClasses = "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2";

const variantClasses = {
  default: "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
  secondary: "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
  destructive: "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
  outline: "text-foreground border-border hover:bg-accent hover:text-accent-foreground",
  success: "border-transparent bg-green-500 text-white hover:bg-green-600 dark:bg-green-600 dark:hover:bg-green-700",
  warning: "border-transparent bg-yellow-500 text-white hover:bg-yellow-600 dark:bg-yellow-600 dark:hover:bg-yellow-700",
  info: "border-transparent bg-blue-500 text-white hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700"
};

const sizeClasses = {
  default: "text-xs px-2.5 py-0.5",
  sm: "text-xs px-2 py-0.5",
  lg: "text-sm px-3 py-1"
};

const badgeClasses = [
  baseClasses,
  variantClasses[variant],
  sizeClasses[size],
  className
].filter(Boolean).join(' ');

// Use anchor tag if href is provided, otherwise use span
const isInteractive = href !== undefined;
---

{href ? (
  <a
    href={href}
    class={badgeClasses}
    {...props}
  >
    <slot />
  </a>
) : (
  <span
    class={badgeClasses}
    {...props}
  >
    <slot />
  </span>
)}

<style>
  /* Enhanced accessibility for interactive badges */
  a.inline-flex:focus-visible {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .inline-flex {
      border-width: 2px;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .inline-flex {
      transition: none;
    }
  }

  /* Constitutional performance optimization */
  .inline-flex {
    contain: layout style paint;
  }

  /* Status indicator patterns for constitutional compliance */
  .status-badge {
    @apply relative;
  }

  .status-badge::before {
    content: '';
    @apply absolute -left-1 top-1/2 h-2 w-2 -translate-y-1/2 rounded-full;
  }

  .status-badge.success::before {
    @apply bg-green-500;
  }

  .status-badge.warning::before {
    @apply bg-yellow-500;
  }

  .status-badge.error::before {
    @apply bg-red-500;
  }

  .status-badge.info::before {
    @apply bg-blue-500;
  }
</style>