---
export interface Props {
  variant?: 'default' | 'destructive' | 'warning' | 'success' | 'info';
  class?: string;
  role?: 'alert' | 'status' | 'none';
}

const {
  variant = 'default',
  class: className = '',
  role = 'alert',
  ...props
} = Astro.props;

// Constitutional alert styling with accessibility
const baseClasses = "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground";

const variantClasses = {
  default: "bg-background text-foreground border-border",
  destructive: "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive bg-destructive/10",
  warning: "border-yellow-500/50 text-yellow-800 dark:text-yellow-200 dark:border-yellow-500 [&>svg]:text-yellow-600 bg-yellow-50 dark:bg-yellow-900/20",
  success: "border-green-500/50 text-green-800 dark:text-green-200 dark:border-green-500 [&>svg]:text-green-600 bg-green-50 dark:bg-green-900/20",
  info: "border-blue-500/50 text-blue-800 dark:text-blue-200 dark:border-blue-500 [&>svg]:text-blue-600 bg-blue-50 dark:bg-blue-900/20"
};

const alertClasses = [
  baseClasses,
  variantClasses[variant],
  className
].filter(Boolean).join(' ');

// Icon mapping for different variants
const iconMap = {
  default: '📄',
  destructive: '⚠️',
  warning: '⚠️',
  success: '✅',
  info: 'ℹ️'
};

const alertIcon = iconMap[variant];
---

<div
  class={alertClasses}
  role={role}
  {...props}
>
  <span class="absolute left-4 top-4 text-lg" aria-hidden="true">
    {alertIcon}
  </span>
  <div class="pl-7">
    <slot />
  </div>
</div>

<style>
  /* Enhanced accessibility for alerts */
  [role="alert"] {
    /* Announce immediately to screen readers */
    live-region: assertive;
  }

  [role="status"] {
    /* Announce politely to screen readers */
    live-region: polite;
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .relative {
      border-width: 2px;
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .relative {
      transition: none;
    }
  }

  /* Constitutional performance optimization */
  .relative {
    contain: layout style paint;
  }

  /* Focus management for interactive alerts */
  .relative:focus-within {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
  }

  /* Enhanced visibility for critical alerts */
  .relative[role="alert"] {
    animation: alert-slide-in 0.3s ease-out;
  }

  @keyframes alert-slide-in {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    @keyframes alert-slide-in {
      from { opacity: 0; }
      to { opacity: 1; }
    }
  }

  /* Icon positioning optimization */
  .absolute {
    line-height: 1;
  }

  /* Content spacing for better readability */
  .pl-7 > * + * {
    margin-top: 0.5rem;
  }
</style>