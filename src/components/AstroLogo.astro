---
/**
 * @component AstroLogo
 * @summary Displays the Astro logo, adapting to the current color theme.
 * @description This component renders the Astro logo and automatically switches between the light and dark versions based on the active theme. It uses `<img>` tags with appropriate `src` attributes for each theme.
 * @property {string} [class] - Additional CSS classes to apply to the logo container.
 * @property {'sm' | 'md' | 'lg'} [size='md'] - The size of the logo.
 */
export interface Props {
  class?: string;
  size?: 'sm' | 'md' | 'lg';
}

const { class: className = '', size = 'md' } = Astro.props;

const sizeClasses = {
  sm: 'w-5 h-5',
  md: 'w-6 h-6',
  lg: 'w-8 h-8'
};
---

<!-- Theme-aware Astro Logo using official assets -->
<div class={`inline-flex ${className}`}>
  <!-- Light theme logo (dark text on light background) -->
  <img
    src="/ghostty-config-files/assets/logos/astro-logo-dark.svg"
    alt="Astro"
    class={`${sizeClasses[size]} dark:hidden`}
    loading="lazy"
  />

  <!-- Dark theme logo (light text on dark background) -->
  <img
    src="/ghostty-config-files/assets/logos/astro-logo-light.svg"
    alt="Astro"
    class={`${sizeClasses[size]} hidden dark:block`}
    loading="lazy"
  />
</div>